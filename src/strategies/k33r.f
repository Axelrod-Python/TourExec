      FUNCTION K33R(J,M,K,L,R,JA)
C BY HAROLD RABBIE
C TYPED BY AX FROM FORTRAN, 1.17.79
C
C ASSUMES THAT THE PROBABILITY OF MY OPPONENT COOPERATING
C DEPENDS ONLY ON MY LAST TWO RESPONSES.
C DETERMINISTIC, NOT NICE
      LOGICAL TWIN
      DIMENSION COOP(4),COUNT(4),P(4),COEFF(6,4),CONST(6)
      DATA CONST/ 0.,4.,6.,6.,8.,12./
      DATA COEFF/36.,16.,0.,12.,0.,0.,
     2      0.,12.,18.,12.,16.,0.,
     3      0.,12.,24.,9.,16.,0.,
     4      0.,0.,0.,9.,12.,48./
C INITIALISE ALL STATE VARIABLES
      K33R=JA       ! Added 7/32/93 to report own old value
      IF(M.GT.1) GO TO 2
      DO 1 JJ=1,4
         COOP(JJ)=0.
         COUNT(JJ)=0.
    1 CONTINUE
      LAST1=1
      LAST2=1
      TWIN=.TRUE.
C UPDATE ESTIMATE OF RELEVANT PROBABILITY
    2 IF(M.LE.2) GO TO3
      COOP(INDEX)=COOP(INDEX)+FLOAT(1-J)
      COUNT(INDEX)=COUNT(INDEX)+1
      P(INDEX)=COOP(INDEX)/COUNT(INDEX)
C COMPUTE INDEX BASED ON MY LAST TWO RESPONSES
    3 INDEX=2*LAST2+LAST1+1
C IDENTIFY MY TWIN
      IF(M.EQ.1) GO TO 4
      IF(J.NE.LAST1) TWIN=.FALSE.
C USE POLICY 4 FOR 22 MOVES
    4 IF(M.LE.22) GO TO 24
C COOPERATE WITH MY TWIN
      IF(TWIN) GO TO 30
C COMPUTE BEST EXPECTED SCORE OVER THE 6 DIFFERENT POLICIES
      BEST=0
      DO 10 II=1,6
         SUM=CONST(II)
         DO 11 JJ=1,4
   11    SUM=SUM+COEFF(II,JJ)*P(JJ)
         IF(SUM.LE.BEST) GO TO 10
         BEST=SUM
         IPOL=II
   10 CONTINUE
C EXECUTE THE BEST POLICY
      GO TO (21,22,23,24,25,26), IPOL
C DISPATCH ACCORDING TO THE LAST TWO MOVES
   21 GO TO (30,30,30,30),INDEX
   22 GO TO (40,30,30,30),INDEX
   23 GO TO (40,30,40,30),INDEX
   24 GO TO (40,40,30,30),INDEX
   25 GO TO (40,40,40,30),INDEX
   26 GO TO (40,40,40,40),INDEX
C COOPERATE
   30 K33R=0
      GO TO 50
C DEFECT
   40 K33R=1
C UPDATE HISTORY
   50 LAST2=LAST1
      LAST1=K33R
      RETURN
      END
